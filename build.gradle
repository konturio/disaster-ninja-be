plugins {
    id 'com.apollographql.apollo' version '2.5.10'
    id 'org.springframework.boot' version '2.5.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
    id 'pmd'
    id "com.github.spotbugs" version "5.0.6"
    id "org.owasp.dependencycheck" version "7.1.0.1"
}

jar {
    enabled = false
}

group = 'io.kontur'
version = '0.8.0-SNAPSHOT'
sourceCompatibility = '16'
targetCompatibility = '16'

repositories {
    mavenCentral()
//    mavenLocal()
}

dependencies {
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    compileOnly 'org.projectlombok:lombok:1.18.22'

    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

    implementation 'org.wololo:jts2geojson:0.16.1'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.2'
    implementation 'com.apollographql.apollo:apollo-runtime:2.5.10'

    //health
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus:1.7.4'

    implementation 'junit:junit:4.13.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'commons-io:commons-io:2.11.0'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation 'uk.co.jemos.podam:podam:7.2.7.RELEASE'
    testImplementation 'com.jayway.jsonpath:json-path-assert:2.6.0'
}

build {
    finalizedBy "dependencyCheckAnalyze"
}

test {
    useJUnitPlatform()
    finalizedBy("jacocoTestReport")
}

apollo {
    graphqlSourceDirectorySet.srcDir("src/main/graphql")
    graphqlSourceDirectorySet.include("**/*.graphql")
    graphqlSourceDirectorySet.exclude("**/schema.graphqls")
}

jacocoTestReport {
    reports {
        csv.enabled true
        csv.destination file("${buildDir}/jacoco.csv")
    }
}

pmd {
    toolVersion "6.45.0"
    ruleSets = [] //disable default rules
    ruleSetConfig = resources.text.fromFile("reports/pmd-ruleset.xml")
    ignoreFailures = true

    pmdMain {
        exclude '**/graphql/**' //exclude generated code
        reportsDir = file("$buildDir/reports/pmd/")
    }
    pmdTest {
        enabled = false
    }
}

spotbugs {
    spotbugsMain {
        ignoreFailures = true
        excludeFilter = file("$projectDir/reports/spotbugs-excludeFilter.xml")
        reports {
            html {
                required = true
                outputLocation = file("$buildDir/reports/spotbugs/index.html")
            }
        }
    }
    spotbugsTest {
        enabled = false
    }
}

dependencyCheck {
    outputDirectory = "$buildDir/reports/owasp"
}