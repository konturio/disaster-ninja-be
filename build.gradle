plugins {
    id 'com.apollographql.apollo' version '2.5.10'
    id 'org.springframework.boot' version '2.5.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

jar {
    enabled = false
}

group = 'io.kontur'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '16'
targetCompatibility = '16'

repositories {
    mavenCentral()
//    mavenLocal()
}

dependencies {
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    compileOnly 'org.projectlombok:lombok:1.18.22'

    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

    implementation 'org.wololo:jts2geojson:0.16.1'
    implementation 'org.springdoc:springdoc-openapi-ui:1.5.11'
    implementation 'com.apollographql.apollo:apollo-runtime:2.5.10'

    //health
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus:1.7.4'

    implementation 'junit:junit:4.13.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'commons-io:commons-io:2.11.0'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation 'uk.co.jemos.podam:podam:7.2.7.RELEASE'
    testImplementation 'com.jayway.jsonpath:json-path-assert:2.6.0'
}

test {
    useJUnitPlatform()
}

apollo {
    graphqlSourceDirectorySet.srcDir("src/main/graphql")
    graphqlSourceDirectorySet.include("**/*.graphql")
    graphqlSourceDirectorySet.exclude("**/schema.graphqls")
}
